generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Metadata {
  description String
  keywords    String
  title       String
}

type ImagesFile {
  destination  String
  encoding     String
  fieldname    String
  filename     String
  mimetype     String
  originalname String
  path         String
  size         Int
}

model Article {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  image         Image             @relation(fields: [image_id], references: [id], name: "article_image")
  image_id      String            @db.ObjectId
  isActive      Boolean
  metadata      Metadata
  preview       String
  slug          String            @unique(map: "slug_1")
  text          String
  title         String
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  @@map("articles")
}

model Benefit {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  icon            Image           @relation(fields: [icon_id], references: [id], name: "benefit_icon")
  icon_id         String           @db.ObjectId
  title           String
  isActive        Boolean
  issue_benefits  Issue[]         @relation("issue_benefits")

  @@map("benefits")
}

model Brand {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  article           String
  icon              Image           @relation(fields: [icon_id], references: [id], name: "brand_icon")
  icon_id           String          @db.ObjectId
  isActive          Boolean
  metadata          Metadata
  slug              String          @unique(map: "slug_1")
  title             String
  gadgets_brands    Gadget[]        @relation("gadget_brands")

  @@map("brands")
}

model Contact {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  address          String
  area             String
  comment          String?
  googleMapLink    String
  googlePluginLink String
  image            Image        @relation(fields: [image_id], references: [id], name: "contact_image")
  image_id         String       @db.ObjectId
  isActive         Boolean
  phones           String[]
  subways          String[]
  workingDate      String
  workingTime      String

  @@map("contacts")
}

model Gadget {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  slug            String         @unique(map: "slug_1")
  title           String
  description     String
  icon            Image          @relation(fields: [icon_id], references: [id], name: "gadget_icon")
  icon_id         String         @db.ObjectId
  brands          Brand          @relation(fields: [brand_ids], references: [id], name: "gadget_brands")
  brand_ids       String[]       @db.ObjectId
  gallery         Image          @relation(fields: [gallery_ids], references: [id], name: "gadget_gallery")
  gallery_ids     String[]       @db.ObjectId
  issues          Issue          @relation(fields: [issues_ids], references: [id], name: "gadget_issues")
  issues_ids      String[]       @db.ObjectId
  metadata        Metadata
  isActive        Boolean

  @@map("gadgets")
}

model Issue {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  slug          String         @unique(map: "slug_1")
  title         String
  description   String
  info          String
  price         String
  image         Image          @relation(fields: [image_id], references: [id], name: "issue_image")
  image_id      String         @db.ObjectId
  benefits      Benefit        @relation(fields: [benefit_ids], references: [id], name: "issue_benefits")
  benefit_ids   String[]       @db.ObjectId
  metadata      Metadata
  isActive      Boolean
  gadget_issues Gadget[]       @relation("gadget_issues")

  @@map("issues")
}

model Image {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  alt            String
  file           ImagesFile
  type           String
  gadget_gallery Gadget[]       @relation("gadget_gallery")
  gadget_icon    Gadget[]       @relation("gadget_icon")
  issue_image    Issue[]        @relation("issue_image")
  contact_image  Contact[]      @relation("contact_image")
  brand_icon     Brand[]        @relation("brand_icon")
  benefit_icon   Benefit[]      @relation("benefit_icon")
  article_image  Article[]      @relation("article_image")

  @@map("images")
}

model users {
  id       String            @id @default(auto()) @map("_id") @db.ObjectId
  email    String            @unique(map: "email_1")
  login    String            @unique(map: "login_1")
  name     String
  password String
  isActive Boolean

  @@map("users")
}
