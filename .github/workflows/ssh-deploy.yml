name: CI/CD Deploy Pipeline # The name of the workflow

on:
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  deploy:
    name: "Publish Application"
    runs-on: ubuntu-latest
    steps:
      - name: "Run deploy on SSH"
        if: ${{ github.event.action == 'closed' && github.event.pull_request.merged == true }}
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd fix-lab
            echo ${{ secrets.REGISTRY_TOKEN  }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            if [[ ${{contains(github.event.pull_request.labels.*.name, 'backend')}} ]]; then
                docker rm $(docker stop $(docker ps -a -q --filter ancestor=ghcr.io/iryna-gry/prod-fixlab-server:latest ))
                docker rmi ghcr.io/iryna-gry/prod-fixlab-server:latest

            if [[ ${{contains(github.event.pull_request.labels.*.name, 'frontend-client')}} ]]; then
                docker rm $(docker stop $(docker ps -a -q --filter ancestor=ghcr.io/iryna-gry/prod-fixlab-client:latest ))
                docker rmi ghcr.io/iryna-gry/prod-fixlab-client:latest

            if [[ ${{contains(github.event.pull_request.labels.*.name, 'frontend-admin')}} ]]; then
                docker rm $(docker stop $(docker ps -a -q --filter ancestor=ghcr.io/iryna-gry/prod-fixlab-admin:latest ))
                docker rmi ghcr.io/iryna-gry/prod-fixlab-admin:latest

            docker compose -f docker-compose.prod-ci.yml -p fix-lab-prod pull
            docker compose -f docker-compose.prod-ci.yml -p fix-lab-prod up -d
